@startuml ClockInFlow
title Clock In Flow - Sequence Diagram

' Define actors and components
actor User
participant "SleepRecordController" as Controller
participant "SleepRecordUsecase::ClockIn" as Usecase
participant "SleepRecord Repository" as Repository
database "PostgreSQL" as DB

' Temporary auth via X-User-Id header (for fast development, to be replaced later)
group Temporary Authentication (Fast Dev Mode)
    User -> Controller: POST /sleep_records/clock_in\nHeader: X-User-Id: <user_id>
    activate Controller

    note right of Controller
      X-User-Id is temporary. To be replaced by JWT auth later.
    end note

    Controller -> DB: SELECT * FROM users\nWHERE id = <user_id> LIMIT 1;
    activate DB
    DB --> Controller: Return <current_user> OR null [user object]
    deactivate DB

    alt User object is null
        Controller --> Controller: error: "<current_user> is null"
        Controller --> User: HTTP 404 Not Found\n"User not found"
    end
end group

Controller -> Usecase: clock_in(<current_user>)
activate Usecase

Usecase --> Repository: find_active_by_user(<current_user>.id)
Repository --> DB: SELECT * FROM sleep_records \nWHERE user_id = user_id AND clock_out IS NULL \nLIMIT 1
DB --> Repository: Return <current_session> OR null [sleep_record object]
deactivate DB
Repository --> Usecase: Return <current_session> OR null [sleep_record object]
deactivate Repository

@enduml